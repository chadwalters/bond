// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

namespace bond.comm;

enum MessageType
{
    Request = 0;
    Response = 1;
    Event = 2;
}

enum ErrorCode
{
    InternalServerError = 0xA0BD0000; // Error is an InternalServerError
    MethodNotFound = 0xA0BD0001;
    InvalidInvocation = 0xA0BD0002;
    TransportError = 0xA0BD0003;
    ConnectionShutDown = 0xA0BD0004;
    MultipleErrorsOccured = 0xA0BD0005; // Error is an AggregateError
}

enum ConnectionShutdownReason
{
    Unknown = 0x0;
    ClientGraceful = 0x1;
    ServerGraceful = 0x2;
    ClientProtocolError = 0x3;
    BondInternalError = 0x4;
    ServiceInternalError = 0x5;
    NetworkError = 0x6;
}

struct Error
{
    0: required int32 error_code;
    1: string message;
    2: nullable<bonded<Error>> inner_error;
}

struct InternalServerError : Error
{
    0: string unique_id;
    1: string server_stack_trace;
}

struct AggregateError : Error
{
    0: vector<bonded<Error>> inner_errors;
}

struct ConnectionMetrics
{
    0: string connection_id;
    1: string local_endpoint;
    2: string remote_endpoint;
    3: ConnectionShutdownReason shutdown_reason = Unknown;
    4: double duration_millis;
}

struct RequestMetrics
{
    0: string request_id;
    1: string connection_id;
    2: string method_name;
    3: string local_endpoint;
    4: string remote_endpoint;
    5: nullable<InternalServerError> error;
    6: double total_time_millis;
    7: double service_method_time_millis;
}
